import{_ as e}from"./trigger_node-5e71bac4.js";import{_ as t,o,c as n,e as s}from"./app-148e4e27.js";const i={},r=s('<h1 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger" aria-hidden="true">#</a> trigger</h1><p><img src="'+e+`" alt="trigger_node.png"></p><p>The calendar is checked for new events on input or cronjob. For events in the future within the preview timespan, a separated cronjob is generated. It&#39;s fired on the start datetime of the ical event. So, on input or check-cronjob, no output is generated. Only when an event starts.</p><h5 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h5><ul><li><p>&quot;Check every&quot;: how often the calendar is checked for new events</p></li><li><p>&quot;Trigger&quot;: possible values:</p><ul><li>Always (Filter expression is ignored)</li><li>Match (only events that match the Filter expression are processed)</li><li>No Match (only events that don&#39;t match the Filter expression are processed)</li></ul></li><li><p>&quot;Filter property&quot;: possible values: - summary - description - attendee - category - start date - end date</p><p>if filterProperty is set to &quot;start date&quot; or &quot;end date&quot;, additonally a filter operator is shown:<br> filter format for dates is <strong>YYYY-MM-DD_hh:mm:sss</strong></p><p>&quot;Filter operator&quot;: possible values:</p><ul><li>between</li><li>before</li><li>after</li></ul></li><li><p>&quot;Filter&quot;: filter property of the events from above is filtered against this regular expression</p></li><li><p>&quot;Offset&quot;: offset, when the start/end cronjob will be triggered (seconds, minutes, hours)</p></li><li><p>&quot;timezone for output&quot;: default is UTC, so eventStart and eventEnd will be a UTC string</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>eventStart<span class="token operator">:</span> <span class="token string">&quot;2021-07-05T03:50:00.000Z&quot;</span>
eventEnd<span class="token operator">:</span> <span class="token string">&quot;2021-07-05T04:30:00.000Z&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>e.g. set timezone to Europe/Berlin</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>eventStart<span class="token operator">:</span> <span class="token string">&quot;2021-07-05T05:50:00.000+02:00&quot;</span>
eventEnd<span class="token operator">:</span> <span class="token string">&quot;2021-07-05T06:30:00.000+02:00&quot;</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>&quot;Name&quot;: Displayname</p></li><li><p>&quot;Cron&quot;: Similar to &quot;Check every&quot;, but much more configurable. It&#39;s a cron expression, how often the calendar is checked for new upcoming events. If Cron is defined, it wins against &quot;Check every&quot;. <i>Empty value to disable.</i></p></li></ul><hr>`,6),a=[r];function l(p,u){return o(),n("div",null,a)}const h=t(i,[["render",l],["__file","trigger.html.vue"]]);export{h as default};
